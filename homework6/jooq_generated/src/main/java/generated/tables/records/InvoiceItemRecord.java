/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.InvoiceItem;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceItemRecord extends UpdatableRecordImpl<InvoiceItemRecord> implements Record5<Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invoice_item.id</code>.
     */
    public InvoiceItemRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_item.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.invoice_item.price</code>.
     */
    public InvoiceItemRecord setPrice(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_item.price</code>.
     */
    public Integer getPrice() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.invoice_item.product</code>.
     */
    public InvoiceItemRecord setProduct(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_item.product</code>.
     */
    public Integer getProduct() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.invoice_item.count</code>.
     */
    public InvoiceItemRecord setCount(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_item.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.invoice_item.id_invoice</code>.
     */
    public InvoiceItemRecord setIdInvoice(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_item.id_invoice</code>.
     */
    public Integer getIdInvoice() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return InvoiceItem.INVOICE_ITEM.ID;
    }

    @Override
    public Field<Integer> field2() {
        return InvoiceItem.INVOICE_ITEM.PRICE;
    }

    @Override
    public Field<Integer> field3() {
        return InvoiceItem.INVOICE_ITEM.PRODUCT;
    }

    @Override
    public Field<Integer> field4() {
        return InvoiceItem.INVOICE_ITEM.COUNT;
    }

    @Override
    public Field<Integer> field5() {
        return InvoiceItem.INVOICE_ITEM.ID_INVOICE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPrice();
    }

    @Override
    public Integer component3() {
        return getProduct();
    }

    @Override
    public Integer component4() {
        return getCount();
    }

    @Override
    public Integer component5() {
        return getIdInvoice();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPrice();
    }

    @Override
    public Integer value3() {
        return getProduct();
    }

    @Override
    public Integer value4() {
        return getCount();
    }

    @Override
    public Integer value5() {
        return getIdInvoice();
    }

    @Override
    public InvoiceItemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public InvoiceItemRecord value2(Integer value) {
        setPrice(value);
        return this;
    }

    @Override
    public InvoiceItemRecord value3(Integer value) {
        setProduct(value);
        return this;
    }

    @Override
    public InvoiceItemRecord value4(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public InvoiceItemRecord value5(Integer value) {
        setIdInvoice(value);
        return this;
    }

    @Override
    public InvoiceItemRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceItemRecord
     */
    public InvoiceItemRecord() {
        super(InvoiceItem.INVOICE_ITEM);
    }

    /**
     * Create a detached, initialised InvoiceItemRecord
     */
    public InvoiceItemRecord(Integer id, Integer price, Integer product, Integer count, Integer idInvoice) {
        super(InvoiceItem.INVOICE_ITEM);

        setId(id);
        setPrice(price);
        setProduct(product);
        setCount(count);
        setIdInvoice(idInvoice);
    }

    /**
     * Create a detached, initialised InvoiceItemRecord
     */
    public InvoiceItemRecord(generated.tables.pojos.InvoiceItem value) {
        super(InvoiceItem.INVOICE_ITEM);

        if (value != null) {
            setId(value.getId());
            setPrice(value.getPrice());
            setProduct(value.getProduct());
            setCount(value.getCount());
            setIdInvoice(value.getIdInvoice());
        }
    }
}
