/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.FlywaySchemaHistory;
import generated.tables.Invoice;
import generated.tables.InvoiceItem;
import generated.tables.Organization;
import generated.tables.Product;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.InvoiceItemRecord;
import generated.tables.records.InvoiceRecord;
import generated.tables.records.OrganizationRecord;
import generated.tables.records.ProductRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoiceRecord> INVOICE_PK = Internal.createUniqueKey(Invoice.INVOICE, DSL.name("invoice_pk"), new TableField[] { Invoice.INVOICE.ID }, true);
    public static final UniqueKey<InvoiceItemRecord> INVOICE_ITEM_PK = Internal.createUniqueKey(InvoiceItem.INVOICE_ITEM, DSL.name("invoice_item_pk"), new TableField[] { InvoiceItem.INVOICE_ITEM.ID }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PK = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_pk"), new TableField[] { Organization.ORGANIZATION.INN }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PK = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pk"), new TableField[] { Product.PRODUCT.INTERNAL_CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoiceRecord, OrganizationRecord> INVOICE__INVOICE_ORGANIZATION_SENDER_FKEY = Internal.createForeignKey(Invoice.INVOICE, DSL.name("invoice_organization_sender_fkey"), new TableField[] { Invoice.INVOICE.ORGANIZATION_SENDER }, Keys.ORGANIZATION_PK, new TableField[] { Organization.ORGANIZATION.INN }, true);
    public static final ForeignKey<InvoiceItemRecord, InvoiceRecord> INVOICE_ITEM__INVOICE_ITEM_ID_INVOICE_FKEY = Internal.createForeignKey(InvoiceItem.INVOICE_ITEM, DSL.name("invoice_item_id_invoice_fkey"), new TableField[] { InvoiceItem.INVOICE_ITEM.ID_INVOICE }, Keys.INVOICE_PK, new TableField[] { Invoice.INVOICE.ID }, true);
    public static final ForeignKey<InvoiceItemRecord, ProductRecord> INVOICE_ITEM__INVOICE_ITEM_PRODUCT_FKEY = Internal.createForeignKey(InvoiceItem.INVOICE_ITEM, DSL.name("invoice_item_product_fkey"), new TableField[] { InvoiceItem.INVOICE_ITEM.PRODUCT }, Keys.PRODUCT_PK, new TableField[] { Product.PRODUCT.INTERNAL_CODE }, true);
}
